#+TITLE: My JavaScript setup

* my own setup for working in JavaScript

** [[https://ternjs.net/doc/manual.html#emacs][Tern, the "intelligent javascript tooling"]]

*** basic setup
    #+BEGIN_SRC emacs-lisp
    (add-to-list 'load-path "/Users/ryandurling/.emacs.d/submodules/tern/emacs")
    (autoload 'tern-mode "tern.el" nil t)
    (add-hook 'js-mode-hook (lambda () (tern-mode t)))
    #+END_SRC

*** auto complete

    #+BEGIN_SRC emacs-lisp
    (use-package auto-complete
      :ensure t
      :config
      (add-hook 'js-mode-hook (lambda () (auto-complete-mode t)))
      (eval-after-load 'tern
	'(progn
	   (require 'tern-auto-complete)
	   (tern-ac-setup))))
    #+END_SRC

*** indium

    #+BEGIN_SRC emacs-lisp
    (use-package exec-path-from-shell
      :ensure t
      :config (exec-path-from-shell-initialize))

    (add-hook 'after-init-hook 'global-company-mode)

    (use-package indium
      :ensure t
      :config
      (add-hook 'js-mode-hook #'indium-interaction-mode))
    #+END_SRC

*** Lint

    #+BEGIN_SRC emacs-lisp
    (use-package flycheck
      :ensure t
      :config
      (defun my/use-eslint-from-node-modules ()
	(let ((root (locate-dominating-file
		     (or (buffer-file-name) default-directory)
		     (lambda (dir)
		       (let ((eslint (expand-file-name "node_modules/eslint/bin/eslint.js" dir)))
			 (and eslint (file-executable-p eslint)))))))
	  (when root
	    (let ((eslint (expand-file-name "node_modules/eslint/bin/eslint.js" root)))
	      (setq-local flycheck-javascript-eslint-executable eslint)))))
      (add-hook 'flycheck-mode-hook #'my/use-eslint-from-node-modules))

    #+END_SRC
