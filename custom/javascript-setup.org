#+TITLE: My Front-end setup

* node

** Always find the [[https://github.com/codesuki/add-node-modules-path][nearest node_modules]]

   This file provides add-node-modules-path, which searches the current files parent directories for the
   node_modules/.bin/ directory and adds it to the buffer local exec-path. This allows Emacs to find project
   based installs of e.g. eslint.

   #+BEGIN_SRC emacs-lisp
   (use-package add-node-modules-path
     :ensure t
     :config
     (eval-after-load 'typescript-mode
       '(add-hook 'typescript-mode-hook #'add-node-modules-path))
     (eval-after-load 'js-mode
       '(add-hook 'js-mode-hook #'add-node-modules-path)))
   #+END_SRC

* Lint

  On the fly eslint
  #+BEGIN_SRC emacs-lisp
  (use-package flycheck
    :defer 1
    :ensure t
    :config
    (add-hook 'js-mode-hook 'flycheck-mode)
    (add-hook 'typescript-mode-hook 'flycheck-mode)
    (setq-default flycheck-disabled-checkers
		  (append flycheck-disabled-checkers
			  '(javascript-jshint)))

    (flycheck-add-mode 'javascript-eslint 'js-mode)
    (flycheck-add-mode 'javascript-eslint 'typescript-mode)

    (setq-default flycheck-disabled-checkers
		  (append flycheck-disabled-checkers
			  '(json-jsonlist))))

  #+END_SRC

  eslint --fix on save
  #+BEGIN_SRC emacs-lisp
  #+END_SRC

* JavaScript

** basic setup
   [[https://ternjs.net/doc/manual.html#emacs][Tern, the "intelligent javascript tooling"]]
   #+BEGIN_SRC emacs-lisp
   (add-to-list 'load-path "/Users/ryandurling/.emacs.d/submodules/tern/emacs")
   (autoload 'tern-mode "tern.el" nil t)
   (add-hook 'js-mode-hook (lambda () (tern-mode t)))
   (setq js-indent-level 2)
   #+END_SRC

** auto complete

   #+BEGIN_SRC emacs-lisp
   (use-package auto-complete
     :ensure t
     :config
     (add-hook 'js-mode-hook (lambda () (auto-complete-mode t)))
     (eval-after-load 'tern
       '(progn
	  (require 'tern-auto-complete)
	  (tern-ac-setup))))
   #+END_SRC

** indium

   #+BEGIN_SRC emacs-lisp
   (use-package exec-path-from-shell
     :ensure t
     :custom
     (exec-path-from-shell-check-startup-files nil)
     :config
     (push "HISTFILE" exec-path-from-shell-variables)
     (exec-path-from-shell-initialize))

   (add-hook 'after-init-hook 'global-company-mode)

   (use-package indium
     :ensure t
     :config
     (add-hook 'js-mode-hook #'indium-interaction-mode))
   #+END_SRC

* TypeScript

** basic setup

   #+BEGIN_SRC emacs-lisp
   (use-package typescript-mode
     :ensure t)
   (setq-default typescript-indent-level 2)
   (use-package ansi-color
     :ensure t
     :config
     (defun colorize-compilation-buffer ()
       (ansi-color-apply-on-region compilation-filter-start (point-max)))
     (add-hook 'compilation-filter-hook 'colorize-compilation-buffer))
   #+END_SRC
